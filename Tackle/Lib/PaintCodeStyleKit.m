//
//  PaintCodeStyleKit.m
//  Tackle
//
//  Created by Scott Bader on 12/28/14.
//  Copyright (c) 2014 Melody Road, LLC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "PaintCodeStyleKit.h"


@implementation PaintCodeStyleKit

#pragma mark Cache

static UIImage* _imageOfAlarmClockIcon = nil;
static UIImage* _imageOfLetterTIcon = nil;
static UIImage* _imageOfAddIcon = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawAlarmClockIcon
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0.393 green: 0.301 blue: 0.5 alpha: 1];

    //// Group
    {
        //// Oval-4 Drawing
        UIBezierPath* oval4Path = UIBezierPath.bezierPath;
        [oval4Path moveToPoint: CGPointMake(8.76, 2.71)];
        [oval4Path addCurveToPoint: CGPointMake(5.33, 1) controlPoint1: CGPointMake(7.97, 1.67) controlPoint2: CGPointMake(6.73, 1)];
        [oval4Path addCurveToPoint: CGPointMake(1, 5.41) controlPoint1: CGPointMake(2.94, 1) controlPoint2: CGPointMake(1, 2.98)];
        [oval4Path addCurveToPoint: CGPointMake(2.88, 9.05) controlPoint1: CGPointMake(1, 6.92) controlPoint2: CGPointMake(1.74, 8.25)];
        [oval4Path addCurveToPoint: CGPointMake(1.96, 13.75) controlPoint1: CGPointMake(2.29, 10.49) controlPoint2: CGPointMake(1.96, 12.08)];
        [oval4Path addCurveToPoint: CGPointMake(14, 26) controlPoint1: CGPointMake(1.96, 20.51) controlPoint2: CGPointMake(7.35, 26)];
        [oval4Path addCurveToPoint: CGPointMake(26.04, 13.75) controlPoint1: CGPointMake(20.65, 26) controlPoint2: CGPointMake(26.04, 20.51)];
        [oval4Path addCurveToPoint: CGPointMake(25.12, 9.05) controlPoint1: CGPointMake(26.04, 12.08) controlPoint2: CGPointMake(25.71, 10.49)];
        [oval4Path addCurveToPoint: CGPointMake(27, 5.41) controlPoint1: CGPointMake(26.26, 8.25) controlPoint2: CGPointMake(27, 6.92)];
        [oval4Path addCurveToPoint: CGPointMake(22.67, 1) controlPoint1: CGPointMake(27, 2.98) controlPoint2: CGPointMake(25.06, 1)];
        [oval4Path addCurveToPoint: CGPointMake(19.24, 2.71) controlPoint1: CGPointMake(21.27, 1) controlPoint2: CGPointMake(20.03, 1.67)];
        [oval4Path addCurveToPoint: CGPointMake(14, 1.49) controlPoint1: CGPointMake(17.66, 1.93) controlPoint2: CGPointMake(15.88, 1.49)];
        [oval4Path addCurveToPoint: CGPointMake(8.76, 2.71) controlPoint1: CGPointMake(12.12, 1.49) controlPoint2: CGPointMake(10.34, 1.93)];
        [oval4Path closePath];
        oval4Path.miterLimit = 4;

        oval4Path.lineCapStyle = kCGLineCapSquare;

        oval4Path.usesEvenOddFillRule = YES;

        [color0 setStroke];
        oval4Path.lineWidth = 2;
        [oval4Path stroke];


        //// Oval-2 Drawing
        UIBezierPath* oval2Path = UIBezierPath.bezierPath;
        [oval2Path moveToPoint: CGPointMake(15.91, 12.96)];
        [oval2Path addLineToPoint: CGPointMake(19.86, 11.83)];
        [oval2Path addCurveToPoint: CGPointMake(20.4, 12.12) controlPoint1: CGPointMake(20.1, 11.76) controlPoint2: CGPointMake(20.34, 11.89)];
        [oval2Path addCurveToPoint: CGPointMake(20.1, 12.66) controlPoint1: CGPointMake(20.47, 12.36) controlPoint2: CGPointMake(20.34, 12.6)];
        [oval2Path addLineToPoint: CGPointMake(16.16, 13.79)];
        [oval2Path addCurveToPoint: CGPointMake(16.17, 14) controlPoint1: CGPointMake(16.17, 13.86) controlPoint2: CGPointMake(16.17, 13.93)];
        [oval2Path addCurveToPoint: CGPointMake(14, 16.17) controlPoint1: CGPointMake(16.17, 15.2) controlPoint2: CGPointMake(15.2, 16.17)];
        [oval2Path addCurveToPoint: CGPointMake(12.32, 15.38) controlPoint1: CGPointMake(13.33, 16.17) controlPoint2: CGPointMake(12.72, 15.87)];
        [oval2Path addLineToPoint: CGPointMake(6.91, 18.51)];
        [oval2Path addCurveToPoint: CGPointMake(6.32, 18.35) controlPoint1: CGPointMake(6.71, 18.63) controlPoint2: CGPointMake(6.44, 18.56)];
        [oval2Path addCurveToPoint: CGPointMake(6.48, 17.76) controlPoint1: CGPointMake(6.2, 18.14) controlPoint2: CGPointMake(6.28, 17.87)];
        [oval2Path addLineToPoint: CGPointMake(11.91, 14.62)];
        [oval2Path addCurveToPoint: CGPointMake(11.83, 14) controlPoint1: CGPointMake(11.86, 14.42) controlPoint2: CGPointMake(11.83, 14.21)];
        [oval2Path addCurveToPoint: CGPointMake(14, 11.83) controlPoint1: CGPointMake(11.83, 12.8) controlPoint2: CGPointMake(12.8, 11.83)];
        [oval2Path addCurveToPoint: CGPointMake(15.91, 12.96) controlPoint1: CGPointMake(14.82, 11.83) controlPoint2: CGPointMake(15.54, 12.28)];
        [oval2Path closePath];
        [oval2Path moveToPoint: CGPointMake(14, 24)];
        [oval2Path addCurveToPoint: CGPointMake(24, 14) controlPoint1: CGPointMake(19.52, 24) controlPoint2: CGPointMake(24, 19.52)];
        [oval2Path addCurveToPoint: CGPointMake(14, 4) controlPoint1: CGPointMake(24, 8.48) controlPoint2: CGPointMake(19.52, 4)];
        [oval2Path addCurveToPoint: CGPointMake(4, 14) controlPoint1: CGPointMake(8.48, 4) controlPoint2: CGPointMake(4, 8.48)];
        [oval2Path addCurveToPoint: CGPointMake(14, 24) controlPoint1: CGPointMake(4, 19.52) controlPoint2: CGPointMake(8.48, 24)];
        [oval2Path closePath];
        oval2Path.miterLimit = 4;

        oval2Path.usesEvenOddFillRule = YES;

        [color0 setFill];
        [oval2Path fill];


        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(2, 2, 24, 24)];
        [color0 setStroke];
        ovalPath.lineWidth = 2;
        [ovalPath stroke];
    }
}

+ (void)drawLetterTIcon
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0.393 green: 0.301 blue: 0.5 alpha: 1];

    //// T Drawing
    UIBezierPath* tPath = UIBezierPath.bezierPath;
    [tPath moveToPoint: CGPointMake(10.13, 17)];
    [tPath addLineToPoint: CGPointMake(10.13, 14.9)];
    [tPath addLineToPoint: CGPointMake(7.83, 15)];
    [tPath addLineToPoint: CGPointMake(7.83, 2)];
    [tPath addLineToPoint: CGPointMake(11, 2)];
    [tPath addLineToPoint: CGPointMake(10.86, 4.33)];
    [tPath addLineToPoint: CGPointMake(13, 4.33)];
    [tPath addLineToPoint: CGPointMake(13, 0)];
    [tPath addLineToPoint: CGPointMake(0, 0)];
    [tPath addLineToPoint: CGPointMake(0, 4.33)];
    [tPath addLineToPoint: CGPointMake(2.14, 4.33)];
    [tPath addLineToPoint: CGPointMake(2, 2)];
    [tPath addLineToPoint: CGPointMake(5.17, 2)];
    [tPath addLineToPoint: CGPointMake(5.17, 15)];
    [tPath addLineToPoint: CGPointMake(2.89, 14.9)];
    [tPath addLineToPoint: CGPointMake(2.89, 17)];
    [tPath addLineToPoint: CGPointMake(10.13, 17)];
    [tPath closePath];
    tPath.miterLimit = 4;

    tPath.usesEvenOddFillRule = YES;

    [color0 setFill];
    [tPath fill];
}

+ (void)drawAddIcon
{
    //// Color Declarations
    UIColor* color0 = [UIColor colorWithRed: 0.393 green: 0.301 blue: 0.5 alpha: 1];

    //// PlusIcon Drawing
    UIBezierPath* plusIconPath = UIBezierPath.bezierPath;
    [plusIconPath moveToPoint: CGPointMake(9.78, 7.22)];
    [plusIconPath addLineToPoint: CGPointMake(9.78, 0)];
    [plusIconPath addLineToPoint: CGPointMake(7.22, 0)];
    [plusIconPath addLineToPoint: CGPointMake(7.22, 7.22)];
    [plusIconPath addLineToPoint: CGPointMake(0, 7.22)];
    [plusIconPath addLineToPoint: CGPointMake(0, 9.78)];
    [plusIconPath addLineToPoint: CGPointMake(7.22, 9.78)];
    [plusIconPath addLineToPoint: CGPointMake(7.22, 17)];
    [plusIconPath addLineToPoint: CGPointMake(9.78, 17)];
    [plusIconPath addLineToPoint: CGPointMake(9.78, 9.78)];
    [plusIconPath addLineToPoint: CGPointMake(17, 9.78)];
    [plusIconPath addLineToPoint: CGPointMake(17, 7.22)];
    [plusIconPath addLineToPoint: CGPointMake(9.78, 7.22)];
    [plusIconPath closePath];
    plusIconPath.miterLimit = 4;

    plusIconPath.usesEvenOddFillRule = YES;

    [color0 setFill];
    [plusIconPath fill];
}

#pragma mark Generated Images

+ (UIImage*)imageOfAlarmClockIcon
{
    if (_imageOfAlarmClockIcon)
        return _imageOfAlarmClockIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(28, 27), NO, 0.0f);
    [PaintCodeStyleKit drawAlarmClockIcon];

    _imageOfAlarmClockIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfAlarmClockIcon;
}

+ (UIImage*)imageOfLetterTIcon
{
    if (_imageOfLetterTIcon)
        return _imageOfLetterTIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(13, 17), NO, 0.0f);
    [PaintCodeStyleKit drawLetterTIcon];

    _imageOfLetterTIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfLetterTIcon;
}

+ (UIImage*)imageOfAddIcon
{
    if (_imageOfAddIcon)
        return _imageOfAddIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(17, 17), NO, 0.0f);
    [PaintCodeStyleKit drawAddIcon];

    _imageOfAddIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysTemplate];
    UIGraphicsEndImageContext();

    return _imageOfAddIcon;
}

#pragma mark Customization Infrastructure

- (void)setAlarmClockIconTargets: (NSArray*)alarmClockIconTargets
{
    _alarmClockIconTargets = alarmClockIconTargets;

    for (id target in self.alarmClockIconTargets)
        [target setImage: PaintCodeStyleKit.imageOfAlarmClockIcon];
}

- (void)setLetterTIconTargets: (NSArray*)letterTIconTargets
{
    _letterTIconTargets = letterTIconTargets;

    for (id target in self.letterTIconTargets)
        [target setImage: PaintCodeStyleKit.imageOfLetterTIcon];
}

- (void)setAddIconTargets: (NSArray*)addIconTargets
{
    _addIconTargets = addIconTargets;

    for (id target in self.addIconTargets)
        [target setImage: PaintCodeStyleKit.imageOfAddIcon];
}


@end
